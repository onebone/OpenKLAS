/*
 * OpenKLAS
 * Copyright (C) 2020-2021 OpenKLAS Team
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

plugins {
    alias libs.plugins.android
    alias libs.plugins.kotlin
    alias libs.plugins.kapt
    alias libs.plugins.navigation.safeargs
    alias libs.plugins.hilt
    alias libs.plugins.google.services
    alias libs.plugins.firebase.crashlytics
    alias libs.plugins.kotlinx.serialization
    alias libs.plugins.ksp
}

android {
    namespace "me.onebone.openklas"
    compileSdk 34

    defaultConfig {
        applicationId "me.onebone.openklas"
        minSdkVersion 21
        targetSdkVersion 34
        versionCode 1
        versionName "0.0.1-dev"
        multiDexEnabled true

        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "boolean", "FETCH_ONLINE", 'true'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            debuggable true

            buildConfigField "boolean", "FETCH_ONLINE", 'true'
        }

        offlineDebug {
            initWith debug

            buildConfigField "boolean", "FETCH_ONLINE", 'false'
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
        freeCompilerArgs = ['-Xopt-in=kotlin.RequiresOptIn']
    }

    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.compose.compiler.get()
    }

    buildFeatures {
        dataBinding true
        compose true
        buildConfig true
    }
}

dependencies {
    implementation libs.kotlin.stdlib
    implementation libs.coroutines
    implementation libs.core.ktx
    implementation libs.appcompat
    implementation libs.material
    implementation libs.constraintlayout
    implementation libs.gridlayout
    implementation libs.persistent.cookie.jar
    implementation libs.multidex
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
    implementation libs.shimmer
    implementation libs.jsoup
    implementation libs.toolbar.compose
    implementation libs.kotlinx.serialization.json

    // lifecycle
    implementation libs.lifecycle.livedata.ktx
    kapt libs.lifecycle.common.java8
    implementation libs.lifecycle.viewmodel.ktx
    implementation libs.lifecycle.runtime.ktx

    // desugaring
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.6'

    // jetpack compose
    implementation platform(libs.compose.bom)
    implementation libs.compose.material
    implementation libs.compose.ui.tooling
    implementation libs.compose.livedata
    implementation libs.activity.compose

    implementation libs.lifecycle.viewmodel.compose

    // firebase
    implementation platform(libs.firebase.bom)

    implementation libs.firebase.crashlytics.ktx
    implementation libs.firebase.analytics.ktx

    // android navigation component
    implementation libs.navigation.fragment.ktx
    implementation libs.navigation.ui.ktx

    // paging library
    implementation libs.paging

    // security
    implementation libs.security.crypto

    // hilt
    implementation libs.hilt.android
    ksp libs.hilt.compiler

    // glide
    implementation libs.glide

    // retrofit
    implementation libs.retrofit
    implementation libs.retrofit.gson
    implementation libs.gson
    implementation libs.logging.interceptor
    implementation libs.retrofit2.kotlinx.serialization.converter
}
